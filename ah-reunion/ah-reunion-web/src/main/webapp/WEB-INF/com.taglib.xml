<?xml version="1.0"?>
<!DOCTYPE facelet-taglib PUBLIC
  "-//Sun Microsystems, Inc.//DTD Facelet Taglib 1.0//EN"
  "http://java.sun.com/dtd/facelet-taglib_1_0.dtd">
<facelet-taglib>
    <namespace>http://airalgerie.dz/facelets</namespace>
    <short-name>ct</short-name>

    <tag>
        <tag-name>dialog</tag-name>
        <source>tags/dialog.xhtml</source>
        
        <attribute>
            <description>The ID of the dialog.</description>
            <name>id</name>
            <required>true</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Height of the dialog.</description>
            <name>height</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Width of the dialog.</description>
            <name>width</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Dialog's Header Title.</description>
            <name>headerTitle</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Dialog's Save button in the footer state.</description>
            <name>saveBtnRendred</name>
            <required>false</required>
            <type>boolean</type>
        </attribute>
        <attribute>
            <description>Dialog's Save button class.</description>
            <name>saveBtnClass</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Whether the dialog can be editable. Default to false.</description>
            <name>isEditable</name>
            <required>false</required>
            <type>boolean</type>
        </attribute>
        <attribute>
            <description>Condition for the edit button.</description>
            <name>editableCondition</name>
            <required>false</required>
            <type>boolean</type>
        </attribute>
        <attribute>
            <description>Condition for the cancel edit button.</description>
            <name>editableCancelCondition</name>
            <required>false</required>
            <type>boolean</type>
        </attribute>
        <attribute>
            <description>Blocks to be updated after edit.</description>
            <name>updatedBlocks</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>The actionListener method for edit button.</description>
            <name>editListner</name>
            <required>false</required>
            <type>javax.el.MethodExpression</type>
        </attribute>
        <attribute>
            <description>The actionListener method for cancel button.</description>
            <name>cancelListner</name>
            <required>false</required>
            <type>javax.el.MethodExpression</type>
        </attribute>
    </tag>
    
    <tag>
        <description>
			<![CDATA[
				Renders an input field with label and message list.
				This must be placed in k:form fieldset=true.
				The markup is like below:
				<pre>
&lt;div id="id_f" class="field {type} {severity}"&gt;
    &lt;label id="id_l" /&gt;
    &lt;input id="id" widgetVar="id_w" /&gt;
    &lt;ul id="id_m" class="messages" /&gt;
&lt;/div&gt;
				</pre>
			]]>
        </description>
        <tag-name>input</tag-name>
        <source>tags/input.xhtml</source>

        <!-- Field -->
        <attribute>
            <description>
				<![CDATA[
					The ID of the input field, this usually represents the property name.
					This is set as ID the <code>&lt;input&gt;</code> element itself and used as general key for label.
					The <code>&lt;div&gt;</code> element representing the whole field will get the same ID suffixed with "_f".
					The <code>&lt;label&gt;</code> element representing the label will get the same ID suffixed with "_l".
					The <code>&lt;ul&gt;</code> element representing the message list will get the same ID suffixed with "_m".
					The PrimeFaces widgetVar value will be the same ID suffixed with "_w".
					There are seven named inserts which you can define via ui:define: beforeLabel, label, insideLabel, beforeInput, input, beforeMessages and messages.
					The default insert ends up inside input.
				]]>
            </description>
            <name>id</name>
            <required>true</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Whether to render HTML container or not. Defaults to true.</description>
            <name>renderContainter</name>
            <required>false</required>
            <type>boolean</type>
        </attribute>
        <attribute>
            <description><![CDATA[Whether to render HTML output or not. Defaults to true. Under the covers, this actually uses <code>&lt;c:if&gt;</code> instead of <code>rendered</code>, so it should save unnecessary bean initialization.]]></description>
            <name>rendered</name>
            <required>false</required>
            <type>boolean</type>
        </attribute>
        <attribute>
            <description><![CDATA[The style class of the field. This is applied on the <code>&lt;div&gt;</code> element representing the whole field.]]></description>
            <name>styleClass</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description><![CDATA[The style class of the label of the field. This is applied on the <code>&lt;label&gt;</code> element representing the label.]]></description>
            <name>labelStyleClass</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description><![CDATA[The style class of the input field itself. This is applied on the <code>&lt;input&gt;</code> element itself.]]></description>
            <name>inputStyleClass</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description><![CDATA[The style class of the message list of the field. This is applied on the <code>&lt;ul&gt;</code> element representing the message list.]]></description>
            <name>messagesStyleClass</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>

        <!-- Label -->
        <attribute>
            <description>Whether the label is rendered. Defaults to true.</description>
            <name>renderLabel</name>
            <required>false</required>
            <type>boolean</type>
        </attribute>
        <attribute>
            <description>The label of the field. Defaults to #{i18n['general.' += id]}.</description>
            <name>label</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>The tooltip of the label of the field.</description>
            <name>tooltip</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>

        <!-- Input -->
        <attribute>
            <description>
                The type of the input field. Special types are a.o. 'menu', 'checkbox', 'number', 'autocomplete', 'password' and 'custom'.
                Other types are interpreted as HTML5 input type. Defaults to 'text'.
            </description>
            <name>type</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                Placeholder for the input
            </description>
            <name>placeholder</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                Pattern for the input, ex: datePicker.
            </description>
            <name>pattern</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                Mask pattern for the input, ex: maskInput.
            </description>
            <name>mask</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>The value of the input field.</description>
            <name>value</name>
            <required>true</required>
            <type>java.lang.Object</type>
        </attribute>
        <attribute>
            <description>Whether the input field is required. Defaults to false. Only use this setting for conditionally required fields or checkboxes; normally @NotNull must be used.</description>
            <name>required</name>
            <required>false</required>
            <type>boolean</type>
        </attribute>
        <attribute>
            <description>Whether the input field is multiple Defaults to false.</description>
            <name>multiple</name>
            <required>false</required>
            <type>boolean</type>
        </attribute>
        <attribute>
            <description>Whether the autocomplete force selection. Defaults to false.</description>
            <name>forceSelection</name>
            <required>false</required>
            <type>boolean</type>
        </attribute>
        <attribute>
            <description>Enables dropdown mode when set true. Defaults to false.</description>
            <name>dropdown</name>
            <required>false</required>
            <type>boolean</type>
        </attribute>
        <attribute>
            <description>When enabled autocomplete caches the searched result list. Defaults to false.</description>
            <name>cache</name>
            <required>false</required>
            <type>boolean</type>
        </attribute>
        <attribute>
            <description>Timeout value for cached results. Defaults to 30000</description>
            <name>cacheTimeout</name>
            <required>false</required>
            <type>java.lang.Integer</type>
        </attribute>
        <attribute>
            <description>Whether the input field is disabled. Defaults to false.</description>
            <name>disabled</name>
            <required>false</required>
            <type>boolean</type>
        </attribute>
        <attribute>
            <description>Whether the input field is readonly. Defaults to false.</description>
            <name>readonly</name>
            <required>false</required>
            <type>boolean</type>
        </attribute>
        <attribute>
            <description>Whether the input field is readonly ( for datePicker ). Defaults to false.</description>
            <name>readonlyInput</name>
            <required>false</required>
            <type>boolean</type>
        </attribute>
        <attribute>
            <description>Whether the input datepicker is time only. Defaults to false.</description>
            <name>timeOnly</name>
            <required>false</required>
            <type>boolean</type>
        </attribute>
        <attribute>
            <description>Whether the input datepicker shows time. Defaults to false.</description>
            <name>showTime</name>
            <required>false</required>
            <type>boolean</type>
        </attribute>
        <attribute>
            <description>Whether the input field supports client side autocomplete. Defaults to true.</description>
            <name>autocomplete</name>
            <required>false</required>
            <type>boolean</type>
        </attribute>
        <attribute>
            <description>The maximum length of the input field. This must be a positive number. Defaults to 255.</description>
            <name>maxlength</name>
            <required>false</required>
            <type>java.lang.Integer</type>
        </attribute>
        <attribute>
            <description>Thousand separator char. Defaults to ' '.</description>
            <name>thousandSeparator</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Decimal separator char. Defaults to ' '.</description>
            <name>decimalSeparator</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Max value for input number.</description>
            <name>max</name>
            <required>false</required>
            <type>java.lang.Integer</type>
        </attribute>
        <attribute>
            <description>Min value. Defaults to 0.</description>
            <name>min</name>
            <required>false</required>
            <type>java.lang.Integer</type>
        </attribute>
        <attribute>
            <description>
                View mode for datePicker, valid values are "date" for datepicker and "month" for month picker.
            </description>
            <name>view</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>The p:autoComplete method in case type attribute is set to 'autocomplete'.</description>
            <name>completeMethod</name>
            <required>false</required>
            <type>javax.el.MethodExpression</type>
        </attribute>
        <attribute>
            <description>Defines the quantity of the selection, valid values are "single", "multiple" and "range". Default is "single".</description>
            <name>selectionMode</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
		
        <!-- Messages -->
        <attribute>
            <description>Whether to HTML-escape the message list. Defaults to true.</description>
            <name>escapeMessages</name>
            <required>false</required>
            <type>boolean</type>
        </attribute>
        <attribute>
            <description>Minimum value.</description>
            <name>min</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
    </tag>
    <tag>
        <tag-name>link</tag-name>
        <source>tags/link.xhtml</source>
        
        <attribute>
            <description>The value of the link.</description>
            <name>value</name>
            <type>java.lang.Object</type>
        </attribute>
        <attribute>
            <description>The ID of the link.</description>
            <name>id</name>
            <required>true</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>The GET path of page to navigate.</description>
            <name>path</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Inline CSS for the link.</description>
            <name>style</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>CSS class for the link.</description>
            <name>styleClass</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Block to update.</description>
            <name>update</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Component(s) to process partially instead of whole view.</description>
            <name>process</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>On click methods to execute.</description>
            <name>onClick</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>On complete methods to execute.</description>
            <name>onComplete</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>The icon for the link.</description>
            <name>icon</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Whether the link is rendered. Defaults to true.</description>
            <name>rendered</name>
            <required>false</required>
            <type>boolean</type>
        </attribute>
        <attribute>
            <description>Whether the link is disabled. Defaults to false.</description>
            <name>disabled</name>
            <required>false</required>
            <type>boolean</type>
        </attribute>
        <attribute>
            <description>Specifies the submit mode, when set to true (default), submit would be made with Ajax.</description>
            <name>ajax</name>
            <required>false</required>
            <type>boolean</type>
        </attribute>
        <attribute>
            <description>Specifies if the link is monitoring download. Default to false.</description>
            <name>isMonitor</name>
            <required>false</required>
            <type>boolean</type>
        </attribute>
        <attribute>
            <description>Whether the link has btn class.</description>
            <name>isBtn</name>
            <required>false</required>
            <type>boolean</type>
        </attribute>
        <attribute>
            <description>The action method of the link.</description>
            <name>action</name>
            <required>false</required>
            <type>javax.el.MethodExpression</type>
        </attribute>
        <attribute>
            <description>The actionListener method of the link.</description>
            <name>actionListener</name>
            <required>false</required>
            <type>javax.el.MethodExpression</type>
        </attribute>
    </tag>

    <tag>
        <tag-name>dateSearch</tag-name>
        <source>tags/date-search.xhtml</source>
        
        <attribute>
            <description>Type of the block. Default to 'simple', for searching by 'matricule'/'name'.</description>
            <name>type</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Whether the label is rendered. Default to true.</description>
            <name>renderLabel</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <description>Label for the block.</description>
            <name>label</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Value for the input.</description>
            <required>true</required>
            <name>dateValue</name>
            <type>java.lang.Object</type>
        </attribute>
        <attribute>
            <description>The ID/class of the updated block.</description>
            <name>updatedBlock</name>
            <required>true</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Whether the block includes a search button. Default to false.</description>
            <name>includeSearchButton</name>
            <required>false</required>
            <type>boolean</type>
        </attribute>
        <attribute>
            <description>Whether the block includes a menu input. Default to false.</description>
            <name>includeMenuInput</name>
            <required>false</required>
            <type>boolean</type>
        </attribute>
        <attribute>
            <description>The ID of the menu input.</description>
            <name>menuInputId</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Placeholder for the date input.</description>
            <name>datePlaceholder</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Pattern for the date input.</description>
            <name>datePattern</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>View configuration for the date input.</description>
            <name>dateView</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        
        <attribute>
            <description>Bean targeting the values.</description>
            <name>bean</name>
            <required>true</required>
            <type>javax.el.MethodExpression</type>
        </attribute>
        <attribute>
            <description>Value for the menu input.</description>
            <name>menuInputValue</name>
            <required>false</required>
            <type>javax.el.MethodExpression</type>
        </attribute>
        <attribute>
            <description>The action method of the link.</description>
            <name>action</name>
            <required>false</required>
            <type>javax.el.MethodExpression</type>
        </attribute>
        <attribute>
            <description>The actionListener method of the link.</description>
            <name>actionListener</name>
            <required>false</required>
            <type>javax.el.MethodExpression</type>
        </attribute>
        <attribute>
            <description>Style class for the search button.</description>
            <name>searchButtonStyleClass</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Value for the search button.</description>
            <name>searchButtonValue</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Icon for the search button.</description>
            <name>searchButtonIcon</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>On complete methods.</description>
            <name>onComplete</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Whether the block contains an export button.</description>
            <name>includeExportButton</name>
            <required>false</required>
            <type>boolean</type>
        </attribute>
        <attribute>
            <description>ID of the export button.</description>
            <name>exportButtonId</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Condition for rendering the export button.</description>
            <name>exportButtonRendered</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>CSS class for the export button.</description>
            <name>exportButtonStyleClass</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Defines the quantity of the selection, valid values are "single", "multiple" and "range". Default is "single".</description>
            <name>selectionMode</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Value for the export button.</description>
            <name>exportButtonValue</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Target for the export button.</description>
            <name>target</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Name for the exported file.</description>
            <name>exportedFileName</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
    </tag>

    <tag>
        <description>Renders a table based on p:dataTable. Each item is available by #{item}.</description>
        <tag-name>dataTable</tag-name>
        <source>tags/data-table.xhtml</source>

        <attribute>
            <description>The id of the p:dataTable. Will also be used as widgetVar name.</description>
            <name>id</name>
            <required>true</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Data model must be an instance of PagedDataModel.</description>
            <name>value</name>
            <required>true</required>
            <type>java.lang.Object</type>
        </attribute>
        <attribute>
            <description>The style class of the p:dataTable. Defaults to null.</description>
            <name>styleClass</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Whether the table is rendered. Defaults to true.</description>
            <name>rendered</name>
            <required>false</required>
            <type>boolean</type>
        </attribute>
        <attribute>
            <description>Whether the table is paginable. Defaults to true. This will show a paginator in bottom of table.</description>
            <name>paginable</name>
            <required>false</required>
            <type>boolean</type>
        </attribute>
        <attribute>
            <description>Number of rows to display per page. Defaults to 10.</description>
            <name>rows</name>
            <required>false</required>
            <type>java.lang.Integer</type>
        </attribute>
        <attribute>
            <description>Options to show in rows per page dropdown of p:dataTable paginator template. Defaults to 10,25,50</description>
            <name>rowsPerPage</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>The p:dataTable paginator template.</description>
            <name>paginatorTemplate</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Text to display before the {CurrentPageReport} template. Defaults to "Showing".</description>
            <name>currentPageReportPrefix</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>The {CurrentPageReport} template. Defaults to {startRecord} - {endRecord} of {totalRecords}</description>
            <name>currentPageReportTemplate</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Text to display after the {CurrentPageReport} template. Defaults to "records"</description>
            <name>currentPageReportSuffix</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Text to display after in case there is no data.</description>
            <name>emptyMessage</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Whether the table trigger an ajax query for filtering. Default to true.</description>
            <name>filter</name>
            <required>false</required>
            <type>boolean</type>
        </attribute>
        <attribute>
            <description>Action to execute after an event.</description>
            <name>onCompleteEvent</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Style class for each row.</description>
            <name>rowStyleClass</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Number of columns to freeze.</description>
            <name>frozenColumns</name>
            <required>false</required>
            <type>java.lang.Integer</type>
        </attribute>
    </tag>

    <tag>
        <description>Renders a confirm dialog.</description>
        <tag-name>confirmDiag</tag-name>
        <source>tags/confirmDiag.xhtml</source>

        <attribute>
            <description>Name for the dialog.</description>
            <name>name</name>
            <required>true</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Name for save btn the dialog.</description>
            <name>saveBtn</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Name for close btn the dialog.</description>
            <name>closeBtn</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Name for icon btn the dialog.</description>
            <name>iconBtn</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Message to display on the dialog.</description>
            <name>message</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description><![CDATA[The style class of the field. This is applied on the <code>&lt;div&gt;</code> element representing the whole field.]]></description>
            <name>styleClass</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Blocks to be updated after edit.</description>
            <name>update</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Action to execute after edit.</description>
            <name>onCompleteAction</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>The actionListener method of the link.</description>
            <name>actionListener</name>
            <required>true</required>
            <type>java.lang.String</type>
        </attribute>
    </tag>
    <tag>
        <tag-name>confirmDialog</tag-name>
        <source>tags/confirm-dialog.xhtml</source>

        <attribute>
            <description>The ID/class of the updated block.</description>
            <name>id</name>
            <required>true</required>
            <type>java.lang.String</type>
        </attribute>
    </tag>
    <tag>
        <description>Renders a stat widget.</description>
        <tag-name>statCard</tag-name>
        <source>tags/stat-card.xhtml</source>

        <attribute>
            <description>Type of the widget.</description>
            <name>type</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Title of the widget.</description>
            <name>title</name>
            <required>true</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Data of the widget.</description>
            <name>data</name>
            <required>true</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Sub data of the widget.</description>
            <name>subData</name>
            <required>true</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Currency of the widget.</description>
            <name>currency</name>
            <required>true</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Icon for the widget.</description>
            <name>icon</name>
            <required>true</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Icon type for the widget.</description>
            <name>iconType</name>
            <required>true</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Style class of the widget.</description>
            <name>styleClass</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Style class for the container of the widget.</description>
            <name>containerStyleClass</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Background color of the widget.</description>
            <name>bgColor</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Background color for borders decoration.</description>
            <name>bordersBgColor</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
    </tag>

</facelet-taglib>